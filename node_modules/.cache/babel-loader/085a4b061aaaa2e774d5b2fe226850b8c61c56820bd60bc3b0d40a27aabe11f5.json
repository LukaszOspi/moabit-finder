{"ast":null,"code":"var _jsxFileName = \"/home/ospi/workspace/moabit-finder/src/components/MapView.js\";\nimport React from 'react';\n// The following imports assume you have installed react-leaflet and\n// leaflet as dependencies. They will not work until you run\n// `npm install react-leaflet leaflet` in your project root. You can\n// replace this implementation with another mapping library (e.g.\n// Google Maps) if preferred.\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n/**\n * Map view component. Displays a Leaflet map with markers for each\n * place. When a marker is clicked, a popup with the place name\n * appears. The `onSelect` callback is triggered when a marker is\n * clicked, allowing the parent component to display details.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapView = ({\n  places,\n  onSelect,\n  height = '400px'\n}) => {\n  // Default center is roughly the Moabit district in Berlin. When\n  // places contain coordinates, you could compute a bounding box\n  // instead. Coordinates should be objects with lat and lng values.\n  const defaultCenter = [52.525, 13.342];\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: defaultCenter,\n    zoom: 13,\n    scrollWheelZoom: true,\n    style: {\n      height,\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), places.map(place => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [place.lat, place.lng],\n      eventHandlers: {\n        click: () => onSelect && onSelect(place)\n      },\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: place.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, place.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","MapView","places","onSelect","height","defaultCenter","center","zoom","scrollWheelZoom","style","width","children","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","map","place","position","lat","lng","eventHandlers","click","name","id","_c","$RefreshReg$"],"sources":["/home/ospi/workspace/moabit-finder/src/components/MapView.js"],"sourcesContent":["import React from 'react';\n// The following imports assume you have installed react-leaflet and\n// leaflet as dependencies. They will not work until you run\n// `npm install react-leaflet leaflet` in your project root. You can\n// replace this implementation with another mapping library (e.g.\n// Google Maps) if preferred.\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n/**\n * Map view component. Displays a Leaflet map with markers for each\n * place. When a marker is clicked, a popup with the place name\n * appears. The `onSelect` callback is triggered when a marker is\n * clicked, allowing the parent component to display details.\n */\nconst MapView = ({ places, onSelect, height = '400px' }) => {\n  // Default center is roughly the Moabit district in Berlin. When\n  // places contain coordinates, you could compute a bounding box\n  // instead. Coordinates should be objects with lat and lng values.\n  const defaultCenter = [52.525, 13.342];\n\n  return (\n    <MapContainer\n      center={defaultCenter}\n      zoom={13}\n      scrollWheelZoom={true}\n      style={{ height, width: '100%' }}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {places.map((place) => (\n        <Marker\n          key={place.id}\n          position={[place.lat, place.lng]}\n          eventHandlers={{\n            click: () => onSelect && onSelect(place),\n          }}\n        >\n          <Popup>{place.name}</Popup>\n        </Marker>\n      ))}\n    </MapContainer>\n  );\n};\n\nexport default MapView;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,OAAO,0BAA0B;;AAEjC;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,OAAO,GAAGA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC,MAAM,GAAG;AAAQ,CAAC,KAAK;EAC1D;EACA;EACA;EACA,MAAMC,aAAa,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC;EAEtC,oBACEL,OAAA,CAACL,YAAY;IACXW,MAAM,EAAED,aAAc;IACtBE,IAAI,EAAE,EAAG;IACTC,eAAe,EAAE,IAAK;IACtBC,KAAK,EAAE;MAAEL,MAAM;MAAEM,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAEjCX,OAAA,CAACJ,SAAS;MACRgB,WAAW,EAAC,0EAA0E;MACtFC,GAAG,EAAC;IAAoD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,EACDf,MAAM,CAACgB,GAAG,CAAEC,KAAK,iBAChBnB,OAAA,CAACH,MAAM;MAELuB,QAAQ,EAAE,CAACD,KAAK,CAACE,GAAG,EAAEF,KAAK,CAACG,GAAG,CAAE;MACjCC,aAAa,EAAE;QACbC,KAAK,EAAEA,CAAA,KAAMrB,QAAQ,IAAIA,QAAQ,CAACgB,KAAK;MACzC,CAAE;MAAAR,QAAA,eAEFX,OAAA,CAACF,KAAK;QAAAa,QAAA,EAAEQ,KAAK,CAACM;MAAI;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC,GANtBE,KAAK,CAACO,EAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOP,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEnB,CAAC;AAACU,EAAA,GA9BI1B,OAAO;AAgCb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}